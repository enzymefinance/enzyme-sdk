// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file enzyme/enzyme/v1alpha/portfolio_asset_item.proto (package enzyme.enzyme.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message enzyme.enzyme.v1alpha.PortfolioAssetItem
 */
export class PortfolioAssetItem extends Message<PortfolioAssetItem> {
  /**
   * The address of the asset
   *
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * The vault's current balance in the asset
   *
   * @generated from field: float balance = 2;
   */
  balance = 0;

  /**
   * The current price for one unit of the asset
   *
   * @generated from field: float price = 3;
   */
  price = 0;

  /**
   * The current value of the asset
   *
   * @generated from field: float value = 4;
   */
  value = 0;

  /**
   * Is the current price valid?
   *
   * @generated from field: bool price_is_valid = 5;
   */
  priceIsValid = false;

  /**
   * Is the asset tracked by the vault?
   *
   * @generated from field: bool asset_is_tracked = 6;
   */
  assetIsTracked = false;

  constructor(data?: PartialMessage<PortfolioAssetItem>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.PortfolioAssetItem";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "balance", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 3, name: "price", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 4, name: "value", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "price_is_valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 6, name: "asset_is_tracked", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PortfolioAssetItem {
    return new PortfolioAssetItem().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PortfolioAssetItem {
    return new PortfolioAssetItem().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PortfolioAssetItem {
    return new PortfolioAssetItem().fromJsonString(jsonString, options);
  }

  static equals(a: PortfolioAssetItem | PlainMessage<PortfolioAssetItem> | undefined, b: PortfolioAssetItem | PlainMessage<PortfolioAssetItem> | undefined): boolean {
    return proto3.util.equals(PortfolioAssetItem, a, b);
  }
}

