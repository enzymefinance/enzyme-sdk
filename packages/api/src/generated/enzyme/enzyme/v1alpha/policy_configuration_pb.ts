// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file enzyme/enzyme/v1alpha/policy_configuration.proto (package enzyme.enzyme.v1alpha, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { AssetBalance } from "./asset_balance_pb.js";
import { AddressListUpdateType, UintListUpdateType } from "./enums_pb.js";

/**
 * @generated from message enzyme.enzyme.v1alpha.PolicyConfiguration
 */
export class PolicyConfiguration extends Message<PolicyConfiguration> {
  /**
   * @generated from oneof enzyme.enzyme.v1alpha.PolicyConfiguration.policy
   */
  policy: {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedAdapterIncomingAssetsPolicyConfiguration allowed_adapter_incoming_assets_policy = 1;
     */
    value: AllowedAdapterIncomingAssetsPolicyConfiguration;
    case: "allowedAdapterIncomingAssetsPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedAdaptersPerManagerPolicyConfiguration allowed_adapters_per_manager_policy = 2;
     */
    value: AllowedAdaptersPerManagerPolicyConfiguration;
    case: "allowedAdaptersPerManagerPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedAdaptersPolicyConfiguration allowed_adapters_policy = 3;
     */
    value: AllowedAdaptersPolicyConfiguration;
    case: "allowedAdaptersPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedAssetsForRedemptionPolicy allowed_assets_for_redemption_policy = 4;
     */
    value: AllowedAssetsForRedemptionPolicy;
    case: "allowedAssetsForRedemptionPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedDepositRecipientsPolicy allowed_deposit_recipients_policy = 5;
     */
    value: AllowedDepositRecipientsPolicy;
    case: "allowedDepositRecipientsPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPerManagerPolicy allowed_external_position_types_per_manager_policy = 6;
     */
    value: AllowedExternalPositionTypesPerManagerPolicy;
    case: "allowedExternalPositionTypesPerManagerPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPolicy allowed_external_position_types_policy = 7;
     */
    value: AllowedExternalPositionTypesPolicy;
    case: "allowedExternalPositionTypesPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AllowedSharesTransferRecipientsPolicy allowed_shares_transfer_recipients_policy = 8;
     */
    value: AllowedSharesTransferRecipientsPolicy;
    case: "allowedSharesTransferRecipientsPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.CumulativeSlippageTolarancePolicy cumulative_slippage_tolerance_policy = 9;
     */
    value: CumulativeSlippageTolarancePolicy;
    case: "cumulativeSlippageTolerancePolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.MinAssetBalancesPostRedemptionPolicy min_asset_balances_post_redemption_policy = 10;
     */
    value: MinAssetBalancesPostRedemptionPolicy;
    case: "minAssetBalancesPostRedemptionPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.MinMaxDepositPolicy min_max_deposit_policy = 11;
     */
    value: MinMaxDepositPolicy;
    case: "minMaxDepositPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.OnlyRemoveDustExternalPositionPolicy only_remove_dust_external_position_policy = 12;
     */
    value: OnlyRemoveDustExternalPositionPolicy;
    case: "onlyRemoveDustExternalPositionPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.OnlyUntrackDustOrPricelessAssetsPolicy only_untrack_dust_or_priceless_assets_policy = 13;
     */
    value: OnlyUntrackDustOrPricelessAssetsPolicy;
    case: "onlyUntrackDustOrPricelessAssetsPolicy";
  } | {
    /**
     * Pre-Sulu policies 
     *
     * @generated from field: enzyme.enzyme.v1alpha.AdapterBlackistPolicy adapter_blacklist_policy = 14;
     */
    value: AdapterBlackistPolicy;
    case: "adapterBlacklistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AdapterWhitelistPolicy adapter_whitelist_policy = 15;
     */
    value: AdapterWhitelistPolicy;
    case: "adapterWhitelistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AssetBlacklistPolicy asset_blacklist_policy = 16;
     */
    value: AssetBlacklistPolicy;
    case: "assetBlacklistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.AssetWhitelistPolicy asset_whitelist_policy = 17;
     */
    value: AssetWhitelistPolicy;
    case: "assetWhitelistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.BuySharesCallerWhitelistPolicy buy_shares_caller_whitelist_policy = 18;
     */
    value: BuySharesCallerWhitelistPolicy;
    case: "buySharesCallerWhitelistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.DepositorWhitelistPolicy depositor_whitelist_policy = 19;
     */
    value: DepositorWhitelistPolicy;
    case: "depositorWhitelistPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.GuaranteedRedemptionPolicy guaranteed_redemption_policy = 20;
     */
    value: GuaranteedRedemptionPolicy;
    case: "guaranteedRedemptionPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.MaxConcentrationPolicy max_concentration_policy = 21;
     */
    value: MaxConcentrationPolicy;
    case: "maxConcentrationPolicy";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1alpha.UnknownPolicyConfiguration unknown_policy = 999;
     */
    value: UnknownPolicyConfiguration;
    case: "unknownPolicy";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<PolicyConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.PolicyConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "allowed_adapter_incoming_assets_policy", kind: "message", T: AllowedAdapterIncomingAssetsPolicyConfiguration, oneof: "policy" },
    { no: 2, name: "allowed_adapters_per_manager_policy", kind: "message", T: AllowedAdaptersPerManagerPolicyConfiguration, oneof: "policy" },
    { no: 3, name: "allowed_adapters_policy", kind: "message", T: AllowedAdaptersPolicyConfiguration, oneof: "policy" },
    { no: 4, name: "allowed_assets_for_redemption_policy", kind: "message", T: AllowedAssetsForRedemptionPolicy, oneof: "policy" },
    { no: 5, name: "allowed_deposit_recipients_policy", kind: "message", T: AllowedDepositRecipientsPolicy, oneof: "policy" },
    { no: 6, name: "allowed_external_position_types_per_manager_policy", kind: "message", T: AllowedExternalPositionTypesPerManagerPolicy, oneof: "policy" },
    { no: 7, name: "allowed_external_position_types_policy", kind: "message", T: AllowedExternalPositionTypesPolicy, oneof: "policy" },
    { no: 8, name: "allowed_shares_transfer_recipients_policy", kind: "message", T: AllowedSharesTransferRecipientsPolicy, oneof: "policy" },
    { no: 9, name: "cumulative_slippage_tolerance_policy", kind: "message", T: CumulativeSlippageTolarancePolicy, oneof: "policy" },
    { no: 10, name: "min_asset_balances_post_redemption_policy", kind: "message", T: MinAssetBalancesPostRedemptionPolicy, oneof: "policy" },
    { no: 11, name: "min_max_deposit_policy", kind: "message", T: MinMaxDepositPolicy, oneof: "policy" },
    { no: 12, name: "only_remove_dust_external_position_policy", kind: "message", T: OnlyRemoveDustExternalPositionPolicy, oneof: "policy" },
    { no: 13, name: "only_untrack_dust_or_priceless_assets_policy", kind: "message", T: OnlyUntrackDustOrPricelessAssetsPolicy, oneof: "policy" },
    { no: 14, name: "adapter_blacklist_policy", kind: "message", T: AdapterBlackistPolicy, oneof: "policy" },
    { no: 15, name: "adapter_whitelist_policy", kind: "message", T: AdapterWhitelistPolicy, oneof: "policy" },
    { no: 16, name: "asset_blacklist_policy", kind: "message", T: AssetBlacklistPolicy, oneof: "policy" },
    { no: 17, name: "asset_whitelist_policy", kind: "message", T: AssetWhitelistPolicy, oneof: "policy" },
    { no: 18, name: "buy_shares_caller_whitelist_policy", kind: "message", T: BuySharesCallerWhitelistPolicy, oneof: "policy" },
    { no: 19, name: "depositor_whitelist_policy", kind: "message", T: DepositorWhitelistPolicy, oneof: "policy" },
    { no: 20, name: "guaranteed_redemption_policy", kind: "message", T: GuaranteedRedemptionPolicy, oneof: "policy" },
    { no: 21, name: "max_concentration_policy", kind: "message", T: MaxConcentrationPolicy, oneof: "policy" },
    { no: 999, name: "unknown_policy", kind: "message", T: UnknownPolicyConfiguration, oneof: "policy" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PolicyConfiguration {
    return new PolicyConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PolicyConfiguration {
    return new PolicyConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PolicyConfiguration {
    return new PolicyConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: PolicyConfiguration | PlainMessage<PolicyConfiguration> | undefined, b: PolicyConfiguration | PlainMessage<PolicyConfiguration> | undefined): boolean {
    return proto3.util.equals(PolicyConfiguration, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedAdapterIncomingAssetsPolicyConfiguration
 */
export class AllowedAdapterIncomingAssetsPolicyConfiguration extends Message<AllowedAdapterIncomingAssetsPolicyConfiguration> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<AllowedAdapterIncomingAssetsPolicyConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedAdapterIncomingAssetsPolicyConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedAdapterIncomingAssetsPolicyConfiguration {
    return new AllowedAdapterIncomingAssetsPolicyConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedAdapterIncomingAssetsPolicyConfiguration {
    return new AllowedAdapterIncomingAssetsPolicyConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedAdapterIncomingAssetsPolicyConfiguration {
    return new AllowedAdapterIncomingAssetsPolicyConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedAdapterIncomingAssetsPolicyConfiguration | PlainMessage<AllowedAdapterIncomingAssetsPolicyConfiguration> | undefined, b: AllowedAdapterIncomingAssetsPolicyConfiguration | PlainMessage<AllowedAdapterIncomingAssetsPolicyConfiguration> | undefined): boolean {
    return proto3.util.equals(AllowedAdapterIncomingAssetsPolicyConfiguration, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedAdaptersPerManagerPolicyConfiguration
 */
export class AllowedAdaptersPerManagerPolicyConfiguration extends Message<AllowedAdaptersPerManagerPolicyConfiguration> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.UserAddressList user_address_lists = 4;
   */
  userAddressLists: UserAddressList[] = [];

  constructor(data?: PartialMessage<AllowedAdaptersPerManagerPolicyConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedAdaptersPerManagerPolicyConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "user_address_lists", kind: "message", T: UserAddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedAdaptersPerManagerPolicyConfiguration {
    return new AllowedAdaptersPerManagerPolicyConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedAdaptersPerManagerPolicyConfiguration {
    return new AllowedAdaptersPerManagerPolicyConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedAdaptersPerManagerPolicyConfiguration {
    return new AllowedAdaptersPerManagerPolicyConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedAdaptersPerManagerPolicyConfiguration | PlainMessage<AllowedAdaptersPerManagerPolicyConfiguration> | undefined, b: AllowedAdaptersPerManagerPolicyConfiguration | PlainMessage<AllowedAdaptersPerManagerPolicyConfiguration> | undefined): boolean {
    return proto3.util.equals(AllowedAdaptersPerManagerPolicyConfiguration, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedAdaptersPolicyConfiguration
 */
export class AllowedAdaptersPolicyConfiguration extends Message<AllowedAdaptersPolicyConfiguration> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<AllowedAdaptersPolicyConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedAdaptersPolicyConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedAdaptersPolicyConfiguration {
    return new AllowedAdaptersPolicyConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedAdaptersPolicyConfiguration {
    return new AllowedAdaptersPolicyConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedAdaptersPolicyConfiguration {
    return new AllowedAdaptersPolicyConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedAdaptersPolicyConfiguration | PlainMessage<AllowedAdaptersPolicyConfiguration> | undefined, b: AllowedAdaptersPolicyConfiguration | PlainMessage<AllowedAdaptersPolicyConfiguration> | undefined): boolean {
    return proto3.util.equals(AllowedAdaptersPolicyConfiguration, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedAssetsForRedemptionPolicy
 */
export class AllowedAssetsForRedemptionPolicy extends Message<AllowedAssetsForRedemptionPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<AllowedAssetsForRedemptionPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedAssetsForRedemptionPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedAssetsForRedemptionPolicy {
    return new AllowedAssetsForRedemptionPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedAssetsForRedemptionPolicy {
    return new AllowedAssetsForRedemptionPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedAssetsForRedemptionPolicy {
    return new AllowedAssetsForRedemptionPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedAssetsForRedemptionPolicy | PlainMessage<AllowedAssetsForRedemptionPolicy> | undefined, b: AllowedAssetsForRedemptionPolicy | PlainMessage<AllowedAssetsForRedemptionPolicy> | undefined): boolean {
    return proto3.util.equals(AllowedAssetsForRedemptionPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedDepositRecipientsPolicy
 */
export class AllowedDepositRecipientsPolicy extends Message<AllowedDepositRecipientsPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<AllowedDepositRecipientsPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedDepositRecipientsPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedDepositRecipientsPolicy {
    return new AllowedDepositRecipientsPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedDepositRecipientsPolicy {
    return new AllowedDepositRecipientsPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedDepositRecipientsPolicy {
    return new AllowedDepositRecipientsPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedDepositRecipientsPolicy | PlainMessage<AllowedDepositRecipientsPolicy> | undefined, b: AllowedDepositRecipientsPolicy | PlainMessage<AllowedDepositRecipientsPolicy> | undefined): boolean {
    return proto3.util.equals(AllowedDepositRecipientsPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPerManagerPolicy
 */
export class AllowedExternalPositionTypesPerManagerPolicy extends Message<AllowedExternalPositionTypesPerManagerPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.UserUintList user_uint_lists = 4;
   */
  userUintLists: UserUintList[] = [];

  constructor(data?: PartialMessage<AllowedExternalPositionTypesPerManagerPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPerManagerPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "user_uint_lists", kind: "message", T: UserUintList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedExternalPositionTypesPerManagerPolicy {
    return new AllowedExternalPositionTypesPerManagerPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedExternalPositionTypesPerManagerPolicy {
    return new AllowedExternalPositionTypesPerManagerPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedExternalPositionTypesPerManagerPolicy {
    return new AllowedExternalPositionTypesPerManagerPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedExternalPositionTypesPerManagerPolicy | PlainMessage<AllowedExternalPositionTypesPerManagerPolicy> | undefined, b: AllowedExternalPositionTypesPerManagerPolicy | PlainMessage<AllowedExternalPositionTypesPerManagerPolicy> | undefined): boolean {
    return proto3.util.equals(AllowedExternalPositionTypesPerManagerPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPolicy
 */
export class AllowedExternalPositionTypesPolicy extends Message<AllowedExternalPositionTypesPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated float external_position_types = 4;
   */
  externalPositionTypes: number[] = [];

  constructor(data?: PartialMessage<AllowedExternalPositionTypesPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedExternalPositionTypesPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "external_position_types", kind: "scalar", T: 2 /* ScalarType.FLOAT */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedExternalPositionTypesPolicy {
    return new AllowedExternalPositionTypesPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedExternalPositionTypesPolicy {
    return new AllowedExternalPositionTypesPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedExternalPositionTypesPolicy {
    return new AllowedExternalPositionTypesPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedExternalPositionTypesPolicy | PlainMessage<AllowedExternalPositionTypesPolicy> | undefined, b: AllowedExternalPositionTypesPolicy | PlainMessage<AllowedExternalPositionTypesPolicy> | undefined): boolean {
    return proto3.util.equals(AllowedExternalPositionTypesPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AllowedSharesTransferRecipientsPolicy
 */
export class AllowedSharesTransferRecipientsPolicy extends Message<AllowedSharesTransferRecipientsPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<AllowedSharesTransferRecipientsPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AllowedSharesTransferRecipientsPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AllowedSharesTransferRecipientsPolicy {
    return new AllowedSharesTransferRecipientsPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AllowedSharesTransferRecipientsPolicy {
    return new AllowedSharesTransferRecipientsPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AllowedSharesTransferRecipientsPolicy {
    return new AllowedSharesTransferRecipientsPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AllowedSharesTransferRecipientsPolicy | PlainMessage<AllowedSharesTransferRecipientsPolicy> | undefined, b: AllowedSharesTransferRecipientsPolicy | PlainMessage<AllowedSharesTransferRecipientsPolicy> | undefined): boolean {
    return proto3.util.equals(AllowedSharesTransferRecipientsPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.CumulativeSlippageTolarancePolicy
 */
export class CumulativeSlippageTolarancePolicy extends Message<CumulativeSlippageTolarancePolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: float tolerance = 4;
   */
  tolerance = 0;

  /**
   * @generated from field: float cumulative_slippage = 5;
   */
  cumulativeSlippage = 0;

  /**
   * @generated from field: google.protobuf.Timestamp last_slippage_timestamp = 6;
   */
  lastSlippageTimestamp?: Timestamp;

  constructor(data?: PartialMessage<CumulativeSlippageTolarancePolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.CumulativeSlippageTolarancePolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "tolerance", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "cumulative_slippage", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 6, name: "last_slippage_timestamp", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CumulativeSlippageTolarancePolicy {
    return new CumulativeSlippageTolarancePolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CumulativeSlippageTolarancePolicy {
    return new CumulativeSlippageTolarancePolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CumulativeSlippageTolarancePolicy {
    return new CumulativeSlippageTolarancePolicy().fromJsonString(jsonString, options);
  }

  static equals(a: CumulativeSlippageTolarancePolicy | PlainMessage<CumulativeSlippageTolarancePolicy> | undefined, b: CumulativeSlippageTolarancePolicy | PlainMessage<CumulativeSlippageTolarancePolicy> | undefined): boolean {
    return proto3.util.equals(CumulativeSlippageTolarancePolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.MinAssetBalancesPostRedemptionPolicy
 */
export class MinAssetBalancesPostRedemptionPolicy extends Message<MinAssetBalancesPostRedemptionPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AssetBalance asset_balances = 4;
   */
  assetBalances: AssetBalance[] = [];

  constructor(data?: PartialMessage<MinAssetBalancesPostRedemptionPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.MinAssetBalancesPostRedemptionPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "asset_balances", kind: "message", T: AssetBalance, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MinAssetBalancesPostRedemptionPolicy {
    return new MinAssetBalancesPostRedemptionPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MinAssetBalancesPostRedemptionPolicy {
    return new MinAssetBalancesPostRedemptionPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MinAssetBalancesPostRedemptionPolicy {
    return new MinAssetBalancesPostRedemptionPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: MinAssetBalancesPostRedemptionPolicy | PlainMessage<MinAssetBalancesPostRedemptionPolicy> | undefined, b: MinAssetBalancesPostRedemptionPolicy | PlainMessage<MinAssetBalancesPostRedemptionPolicy> | undefined): boolean {
    return proto3.util.equals(MinAssetBalancesPostRedemptionPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.MinMaxDepositPolicy
 */
export class MinMaxDepositPolicy extends Message<MinMaxDepositPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: float min_deposit_amount = 4;
   */
  minDepositAmount = 0;

  /**
   * @generated from field: float max_deposit_amount = 5;
   */
  maxDepositAmount = 0;

  constructor(data?: PartialMessage<MinMaxDepositPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.MinMaxDepositPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "min_deposit_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "max_deposit_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MinMaxDepositPolicy {
    return new MinMaxDepositPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MinMaxDepositPolicy {
    return new MinMaxDepositPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MinMaxDepositPolicy {
    return new MinMaxDepositPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: MinMaxDepositPolicy | PlainMessage<MinMaxDepositPolicy> | undefined, b: MinMaxDepositPolicy | PlainMessage<MinMaxDepositPolicy> | undefined): boolean {
    return proto3.util.equals(MinMaxDepositPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.OnlyRemoveDustExternalPositionPolicy
 */
export class OnlyRemoveDustExternalPositionPolicy extends Message<OnlyRemoveDustExternalPositionPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  constructor(data?: PartialMessage<OnlyRemoveDustExternalPositionPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.OnlyRemoveDustExternalPositionPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnlyRemoveDustExternalPositionPolicy {
    return new OnlyRemoveDustExternalPositionPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnlyRemoveDustExternalPositionPolicy {
    return new OnlyRemoveDustExternalPositionPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnlyRemoveDustExternalPositionPolicy {
    return new OnlyRemoveDustExternalPositionPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: OnlyRemoveDustExternalPositionPolicy | PlainMessage<OnlyRemoveDustExternalPositionPolicy> | undefined, b: OnlyRemoveDustExternalPositionPolicy | PlainMessage<OnlyRemoveDustExternalPositionPolicy> | undefined): boolean {
    return proto3.util.equals(OnlyRemoveDustExternalPositionPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.OnlyUntrackDustOrPricelessAssetsPolicy
 */
export class OnlyUntrackDustOrPricelessAssetsPolicy extends Message<OnlyUntrackDustOrPricelessAssetsPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  constructor(data?: PartialMessage<OnlyUntrackDustOrPricelessAssetsPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.OnlyUntrackDustOrPricelessAssetsPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OnlyUntrackDustOrPricelessAssetsPolicy {
    return new OnlyUntrackDustOrPricelessAssetsPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OnlyUntrackDustOrPricelessAssetsPolicy {
    return new OnlyUntrackDustOrPricelessAssetsPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OnlyUntrackDustOrPricelessAssetsPolicy {
    return new OnlyUntrackDustOrPricelessAssetsPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: OnlyUntrackDustOrPricelessAssetsPolicy | PlainMessage<OnlyUntrackDustOrPricelessAssetsPolicy> | undefined, b: OnlyUntrackDustOrPricelessAssetsPolicy | PlainMessage<OnlyUntrackDustOrPricelessAssetsPolicy> | undefined): boolean {
    return proto3.util.equals(OnlyUntrackDustOrPricelessAssetsPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.UnknownPolicyConfiguration
 */
export class UnknownPolicyConfiguration extends Message<UnknownPolicyConfiguration> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  constructor(data?: PartialMessage<UnknownPolicyConfiguration>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.UnknownPolicyConfiguration";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UnknownPolicyConfiguration {
    return new UnknownPolicyConfiguration().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UnknownPolicyConfiguration {
    return new UnknownPolicyConfiguration().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UnknownPolicyConfiguration {
    return new UnknownPolicyConfiguration().fromJsonString(jsonString, options);
  }

  static equals(a: UnknownPolicyConfiguration | PlainMessage<UnknownPolicyConfiguration> | undefined, b: UnknownPolicyConfiguration | PlainMessage<UnknownPolicyConfiguration> | undefined): boolean {
    return proto3.util.equals(UnknownPolicyConfiguration, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AdapterBlackistPolicy
 */
export class AdapterBlackistPolicy extends Message<AdapterBlackistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string adapters = 4;
   */
  adapters: string[] = [];

  constructor(data?: PartialMessage<AdapterBlackistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AdapterBlackistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "adapters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdapterBlackistPolicy {
    return new AdapterBlackistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdapterBlackistPolicy {
    return new AdapterBlackistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdapterBlackistPolicy {
    return new AdapterBlackistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AdapterBlackistPolicy | PlainMessage<AdapterBlackistPolicy> | undefined, b: AdapterBlackistPolicy | PlainMessage<AdapterBlackistPolicy> | undefined): boolean {
    return proto3.util.equals(AdapterBlackistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AdapterWhitelistPolicy
 */
export class AdapterWhitelistPolicy extends Message<AdapterWhitelistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string adapters = 4;
   */
  adapters: string[] = [];

  constructor(data?: PartialMessage<AdapterWhitelistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AdapterWhitelistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "adapters", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdapterWhitelistPolicy {
    return new AdapterWhitelistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdapterWhitelistPolicy {
    return new AdapterWhitelistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdapterWhitelistPolicy {
    return new AdapterWhitelistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AdapterWhitelistPolicy | PlainMessage<AdapterWhitelistPolicy> | undefined, b: AdapterWhitelistPolicy | PlainMessage<AdapterWhitelistPolicy> | undefined): boolean {
    return proto3.util.equals(AdapterWhitelistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AssetBlacklistPolicy
 */
export class AssetBlacklistPolicy extends Message<AssetBlacklistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string assets = 4;
   */
  assets: string[] = [];

  constructor(data?: PartialMessage<AssetBlacklistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AssetBlacklistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "assets", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetBlacklistPolicy {
    return new AssetBlacklistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetBlacklistPolicy {
    return new AssetBlacklistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetBlacklistPolicy {
    return new AssetBlacklistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AssetBlacklistPolicy | PlainMessage<AssetBlacklistPolicy> | undefined, b: AssetBlacklistPolicy | PlainMessage<AssetBlacklistPolicy> | undefined): boolean {
    return proto3.util.equals(AssetBlacklistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AssetWhitelistPolicy
 */
export class AssetWhitelistPolicy extends Message<AssetWhitelistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string assets = 4;
   */
  assets: string[] = [];

  constructor(data?: PartialMessage<AssetWhitelistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AssetWhitelistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "assets", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AssetWhitelistPolicy {
    return new AssetWhitelistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AssetWhitelistPolicy {
    return new AssetWhitelistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AssetWhitelistPolicy {
    return new AssetWhitelistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: AssetWhitelistPolicy | PlainMessage<AssetWhitelistPolicy> | undefined, b: AssetWhitelistPolicy | PlainMessage<AssetWhitelistPolicy> | undefined): boolean {
    return proto3.util.equals(AssetWhitelistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.BuySharesCallerWhitelistPolicy
 */
export class BuySharesCallerWhitelistPolicy extends Message<BuySharesCallerWhitelistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string callers = 4;
   */
  callers: string[] = [];

  constructor(data?: PartialMessage<BuySharesCallerWhitelistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.BuySharesCallerWhitelistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "callers", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BuySharesCallerWhitelistPolicy {
    return new BuySharesCallerWhitelistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BuySharesCallerWhitelistPolicy {
    return new BuySharesCallerWhitelistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BuySharesCallerWhitelistPolicy {
    return new BuySharesCallerWhitelistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: BuySharesCallerWhitelistPolicy | PlainMessage<BuySharesCallerWhitelistPolicy> | undefined, b: BuySharesCallerWhitelistPolicy | PlainMessage<BuySharesCallerWhitelistPolicy> | undefined): boolean {
    return proto3.util.equals(BuySharesCallerWhitelistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.DepositorWhitelistPolicy
 */
export class DepositorWhitelistPolicy extends Message<DepositorWhitelistPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: repeated string depositors = 4;
   */
  depositors: string[] = [];

  constructor(data?: PartialMessage<DepositorWhitelistPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.DepositorWhitelistPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "depositors", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DepositorWhitelistPolicy {
    return new DepositorWhitelistPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DepositorWhitelistPolicy {
    return new DepositorWhitelistPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DepositorWhitelistPolicy {
    return new DepositorWhitelistPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: DepositorWhitelistPolicy | PlainMessage<DepositorWhitelistPolicy> | undefined, b: DepositorWhitelistPolicy | PlainMessage<DepositorWhitelistPolicy> | undefined): boolean {
    return proto3.util.equals(DepositorWhitelistPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.GuaranteedRedemptionPolicy
 */
export class GuaranteedRedemptionPolicy extends Message<GuaranteedRedemptionPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: float start_timestamp = 4;
   */
  startTimestamp = 0;

  /**
   * @generated from field: float duration = 5;
   */
  duration = 0;

  constructor(data?: PartialMessage<GuaranteedRedemptionPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.GuaranteedRedemptionPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "start_timestamp", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 5, name: "duration", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GuaranteedRedemptionPolicy {
    return new GuaranteedRedemptionPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GuaranteedRedemptionPolicy {
    return new GuaranteedRedemptionPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GuaranteedRedemptionPolicy {
    return new GuaranteedRedemptionPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: GuaranteedRedemptionPolicy | PlainMessage<GuaranteedRedemptionPolicy> | undefined, b: GuaranteedRedemptionPolicy | PlainMessage<GuaranteedRedemptionPolicy> | undefined): boolean {
    return proto3.util.equals(GuaranteedRedemptionPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.MaxConcentrationPolicy
 */
export class MaxConcentrationPolicy extends Message<MaxConcentrationPolicy> {
  /**
   * @generated from field: string address = 1;
   */
  address = "";

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 2;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: bool enabled = 3;
   */
  enabled = false;

  /**
   * @generated from field: float max_concentration = 4;
   */
  maxConcentration = 0;

  constructor(data?: PartialMessage<MaxConcentrationPolicy>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.MaxConcentrationPolicy";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "created_at", kind: "message", T: Timestamp },
    { no: 3, name: "enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "max_concentration", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MaxConcentrationPolicy {
    return new MaxConcentrationPolicy().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MaxConcentrationPolicy {
    return new MaxConcentrationPolicy().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MaxConcentrationPolicy {
    return new MaxConcentrationPolicy().fromJsonString(jsonString, options);
  }

  static equals(a: MaxConcentrationPolicy | PlainMessage<MaxConcentrationPolicy> | undefined, b: MaxConcentrationPolicy | PlainMessage<MaxConcentrationPolicy> | undefined): boolean {
    return proto3.util.equals(MaxConcentrationPolicy, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.AddressList
 */
export class AddressList extends Message<AddressList> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string creator = 3;
   */
  creator = "";

  /**
   * @generated from field: string owner = 4;
   */
  owner = "";

  /**
   * @generated from field: enzyme.enzyme.v1alpha.AddressListUpdateType update_type = 5;
   */
  updateType = AddressListUpdateType.UNSPECIFIED;

  /**
   * @generated from field: repeated string items = 6;
   */
  items: string[] = [];

  constructor(data?: PartialMessage<AddressList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.AddressList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "update_type", kind: "enum", T: proto3.getEnumType(AddressListUpdateType) },
    { no: 6, name: "items", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddressList {
    return new AddressList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddressList {
    return new AddressList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddressList {
    return new AddressList().fromJsonString(jsonString, options);
  }

  static equals(a: AddressList | PlainMessage<AddressList> | undefined, b: AddressList | PlainMessage<AddressList> | undefined): boolean {
    return proto3.util.equals(AddressList, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.UserAddressList
 */
export class UserAddressList extends Message<UserAddressList> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string user_address = 2;
   */
  userAddress = "";

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.AddressList address_lists = 4;
   */
  addressLists: AddressList[] = [];

  constructor(data?: PartialMessage<UserAddressList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.UserAddressList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "address_lists", kind: "message", T: AddressList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserAddressList {
    return new UserAddressList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserAddressList {
    return new UserAddressList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserAddressList {
    return new UserAddressList().fromJsonString(jsonString, options);
  }

  static equals(a: UserAddressList | PlainMessage<UserAddressList> | undefined, b: UserAddressList | PlainMessage<UserAddressList> | undefined): boolean {
    return proto3.util.equals(UserAddressList, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.UintList
 */
export class UintList extends Message<UintList> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string creator = 3;
   */
  creator = "";

  /**
   * @generated from field: string owner = 4;
   */
  owner = "";

  /**
   * @generated from field: enzyme.enzyme.v1alpha.UintListUpdateType update_type = 5;
   */
  updateType = UintListUpdateType.UNSPECIFIED;

  /**
   * @generated from field: repeated string items = 6;
   */
  items: string[] = [];

  constructor(data?: PartialMessage<UintList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.UintList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "creator", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "update_type", kind: "enum", T: proto3.getEnumType(UintListUpdateType) },
    { no: 6, name: "items", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UintList {
    return new UintList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UintList {
    return new UintList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UintList {
    return new UintList().fromJsonString(jsonString, options);
  }

  static equals(a: UintList | PlainMessage<UintList> | undefined, b: UintList | PlainMessage<UintList> | undefined): boolean {
    return proto3.util.equals(UintList, a, b);
  }
}

/**
 * @generated from message enzyme.enzyme.v1alpha.UserUintList
 */
export class UserUintList extends Message<UserUintList> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string user_address = 2;
   */
  userAddress = "";

  /**
   * @generated from field: repeated enzyme.enzyme.v1alpha.UintList uint_list = 4;
   */
  uintList: UintList[] = [];

  constructor(data?: PartialMessage<UserUintList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "enzyme.enzyme.v1alpha.UserUintList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "uint_list", kind: "message", T: UintList, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserUintList {
    return new UserUintList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserUintList {
    return new UserUintList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserUintList {
    return new UserUintList().fromJsonString(jsonString, options);
  }

  static equals(a: UserUintList | PlainMessage<UserUintList> | undefined, b: UserUintList | PlainMessage<UserUintList> | undefined): boolean {
    return proto3.util.equals(UserUintList, a, b);
  }
}

