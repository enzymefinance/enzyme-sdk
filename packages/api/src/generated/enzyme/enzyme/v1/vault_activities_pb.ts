// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file enzyme/enzyme/v1/vault_activities.proto (package enzyme.enzyme.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { ActivityCategory } from "./enums_pb";
import { file_enzyme_enzyme_v1_enums } from "./enums_pb";
import type { AssetAmount } from "./asset_amount_pb";
import { file_enzyme_enzyme_v1_asset_amount } from "./asset_amount_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file enzyme/enzyme/v1/vault_activities.proto.
 */
export const file_enzyme_enzyme_v1_vault_activities: GenFile = /*@__PURE__*/
  fileDesc("", [file_enzyme_enzyme_v1_enums, file_enzyme_enzyme_v1_asset_amount]);

/**
 * @generated from message enzyme.enzyme.v1.VaultActivities
 */
export type VaultActivities = Message<"enzyme.enzyme.v1.VaultActivities"> & {
  /**
   * @generated from oneof enzyme.enzyme.v1.VaultActivities.vaultActivity
   */
  vaultActivity: {
    /**
     * @generated from field: enzyme.enzyme.v1.AaveDebtPositionChange aave_debt_position_change = 1;
     */
    value: AaveDebtPositionChange;
    case: "aaveDebtPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ArbitraryLoanPositionChange arbitrary_loan_position_change = 2;
     */
    value: ArbitraryLoanPositionChange;
    case: "arbitraryLoanPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.CompoundDebtPositionChange compound_debt_position_change = 3;
     */
    value: CompoundDebtPositionChange;
    case: "compoundDebtPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ConvexVotingPositionChange convex_voting_position_change = 4;
     */
    value: ConvexVotingPositionChange;
    case: "convexVotingPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ExternalPositionAddedEvent external_position_added_event = 5;
     */
    value: ExternalPositionAddedEvent;
    case: "externalPositionAddedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ExternalPositionRemovedEvent external_position_removed_event = 6;
     */
    value: ExternalPositionRemovedEvent;
    case: "externalPositionRemovedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.FeeSharesAllocationChangedEvent fee_shares_allocation_changed_event = 7;
     */
    value: FeeSharesAllocationChangedEvent;
    case: "feeSharesAllocationChangedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.FeeSharesBurnedEvent fee_shares_burned_event = 8;
     */
    value: FeeSharesBurnedEvent;
    case: "feeSharesBurnedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.FeeSharesPaidEvent fee_shares_paid_event = 9;
     */
    value: FeeSharesPaidEvent;
    case: "feeSharesPaidEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.FeeSharesReceivedEvent fee_shares_received_event = 10;
     */
    value: FeeSharesReceivedEvent;
    case: "feeSharesReceivedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.FreelyTransferableSharesSetEvent freely_transferable_shares_set_event = 11;
     */
    value: FreelyTransferableSharesSetEvent;
    case: "freelyTransferableSharesSetEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.GasRelayerDeposited gas_relayer_deposited = 12;
     */
    value: GasRelayerDeposited;
    case: "gasRelayerDeposited";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.GasRelayerWithdrawn gas_relayer_withdrawn = 13;
     */
    value: GasRelayerWithdrawn;
    case: "gasRelayerWithdrawn";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.KilnStakingPositionChange kiln_staking_position_change = 14;
     */
    value: KilnStakingPositionChange;
    case: "kilnStakingPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.LiquityDebtPositionChange liquity_debt_position_change = 15;
     */
    value: LiquityDebtPositionChange;
    case: "liquityDebtPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.MapleLiquidityPositionChange maple_liquidity_position_change = 16;
     */
    value: MapleLiquidityPositionChange;
    case: "mapleLiquidityPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.PolicyDisabledForVault policy_disabled_for_vault = 17;
     */
    value: PolicyDisabledForVault;
    case: "policyDisabledForVault";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.PolicyEnabledForVault policy_enabled_for_vault = 18;
     */
    value: PolicyEnabledForVault;
    case: "policyEnabledForVault";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.PricelessAssetBypass priceless_asset_bypass = 19;
     */
    value: PricelessAssetBypass;
    case: "pricelessAssetBypass";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.PricelessAssetTimelock priceless_asset_timelock = 20;
     */
    value: PricelessAssetTimelock;
    case: "pricelessAssetTimelock";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ProtocolFeeBurned protocol_fee_burned = 21;
     */
    value: ProtocolFeeBurned;
    case: "protocolFeeBurned";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.ProtocolFeePaid protocol_fee_paid = 22;
     */
    value: ProtocolFeePaid;
    case: "protocolFeePaid";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.SharesBoughtEvent shares_bought_event = 23;
     */
    value: SharesBoughtEvent;
    case: "sharesBoughtEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.SharesRedeemedEvent shares_redeemed_event = 24;
     */
    value: SharesRedeemedEvent;
    case: "sharesRedeemedEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.SharesTransferEvent shares_transfer_event = 25;
     */
    value: SharesTransferEvent;
    case: "sharesTransferEvent";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.TheGraphDelegationPositionChange the_graph_delegation_position_change = 26;
     */
    value: TheGraphDelegationPositionChange;
    case: "theGraphDelegationPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.Trade trade = 27;
     */
    value: Trade;
    case: "trade";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.UniswapV3LiquidityPositionChange uniswap_v3_liquidity_position_change = 28;
     */
    value: UniswapV3LiquidityPositionChange;
    case: "uniswapV3LiquidityPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.UnknownExternalPositionChange unknown_external_position_change = 29;
     */
    value: UnknownExternalPositionChange;
    case: "unknownExternalPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultCreated vault_created = 30;
     */
    value: VaultCreated;
    case: "vaultCreated";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultMigrationCancelled vault_migration_cancelled = 31;
     */
    value: VaultMigrationCancelled;
    case: "vaultMigrationCancelled";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultMigrationExecuted vault_migration_executed = 32;
     */
    value: VaultMigrationExecuted;
    case: "vaultMigrationExecuted";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultMigrationSignalled vault_migration_signalled = 33;
     */
    value: VaultMigrationSignalled;
    case: "vaultMigrationSignalled";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultNominatedOwnerRemoved vault_nominated_owner_removed = 34;
     */
    value: VaultNominatedOwnerRemoved;
    case: "vaultNominatedOwnerRemoved";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultNominatedOwnerSet vault_nominated_owner_set = 35;
     */
    value: VaultNominatedOwnerSet;
    case: "vaultNominatedOwnerSet";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultOwnershipTransferred vault_ownership_transferred = 36;
     */
    value: VaultOwnershipTransferred;
    case: "vaultOwnershipTransferred";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultReconfigurationCancelled vault_reconfiguration_cancelled = 37;
     */
    value: VaultReconfigurationCancelled;
    case: "vaultReconfigurationCancelled";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultReconfigurationExecuted vault_reconfiguration_executed = 38;
     */
    value: VaultReconfigurationExecuted;
    case: "vaultReconfigurationExecuted";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.VaultReconfigurationSignalled vault_reconfiguration_signalled = 39;
     */
    value: VaultReconfigurationSignalled;
    case: "vaultReconfigurationSignalled";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.AaveV3DebtPositionChange aave_v3_debt_position_change = 40;
     */
    value: AaveV3DebtPositionChange;
    case: "aaveV3DebtPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.LidoWithdrawalsPositionChange lido_withdrawals_position_change = 41;
     */
    value: LidoWithdrawalsPositionChange;
    case: "lidoWithdrawalsPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.StakeWiseStakingPositionChange stake_wise_staking_position_change = 42;
     */
    value: StakeWiseStakingPositionChange;
    case: "stakeWiseStakingPositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.PendleV2PositionChange pendle_v2_position_change = 43;
     */
    value: PendleV2PositionChange;
    case: "pendleV2PositionChange";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.TrackedAssetAdded tracked_asset_added = 44;
     */
    value: TrackedAssetAdded;
    case: "trackedAssetAdded";
  } | {
    /**
     * @generated from field: enzyme.enzyme.v1.TrackedAssetRemoved tracked_asset_removed = 45;
     */
    value: TrackedAssetRemoved;
    case: "trackedAssetRemoved";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message enzyme.enzyme.v1.VaultActivities.
 * Use `create(VaultActivitiesSchema)` to create a new message.
 */
export const VaultActivitiesSchema: GenMessage<VaultActivities> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 0);

/**
 * @generated from message enzyme.enzyme.v1.ActivityPerformanceFee
 */
export type ActivityPerformanceFee = Message<"enzyme.enzyme.v1.ActivityPerformanceFee"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string fee_type = 2;
   */
  feeType: string;

  /**
   * @generated from field: string rate = 3;
   */
  rate: string;

  /**
   * @generated from field: float period = 4;
   */
  period: number;
};

/**
 * Describes the message enzyme.enzyme.v1.ActivityPerformanceFee.
 * Use `create(ActivityPerformanceFeeSchema)` to create a new message.
 */
export const ActivityPerformanceFeeSchema: GenMessage<ActivityPerformanceFee> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 1);

/**
 * @generated from message enzyme.enzyme.v1.ActivityFee
 */
export type ActivityFee = Message<"enzyme.enzyme.v1.ActivityFee"> & {
  /**
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * @generated from field: string fee_type = 3;
   */
  feeType: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ActivityFee.
 * Use `create(ActivityFeeSchema)` to create a new message.
 */
export const ActivityFeeSchema: GenMessage<ActivityFee> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 2);

/**
 * @generated from message enzyme.enzyme.v1.AaveDebtPositionChange
 */
export type AaveDebtPositionChange = Message<"enzyme.enzyme.v1.AaveDebtPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.ActivityCategory activity_categories = 4;
   */
  activityCategories: ActivityCategory[];

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 5;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: string external_position = 6;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 7;
   */
  vault: string;

  /**
   * @generated from field: string aave_debt_position_change_type = 8;
   */
  aaveDebtPositionChangeType: string;
};

/**
 * Describes the message enzyme.enzyme.v1.AaveDebtPositionChange.
 * Use `create(AaveDebtPositionChangeSchema)` to create a new message.
 */
export const AaveDebtPositionChangeSchema: GenMessage<AaveDebtPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 3);

/**
 * @generated from message enzyme.enzyme.v1.AaveV3DebtPositionChange
 */
export type AaveV3DebtPositionChange = Message<"enzyme.enzyme.v1.AaveV3DebtPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.ActivityCategory activity_categories = 4;
   */
  activityCategories: ActivityCategory[];

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 5;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: string external_position = 6;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 7;
   */
  vault: string;

  /**
   * @generated from field: string aave_v3_debt_position_change_type = 8;
   */
  aaveV3DebtPositionChangeType: string;

  /**
   * @generated from field: int32 e_mode_category_id = 9;
   */
  eModeCategoryId: number;
};

/**
 * Describes the message enzyme.enzyme.v1.AaveV3DebtPositionChange.
 * Use `create(AaveV3DebtPositionChangeSchema)` to create a new message.
 */
export const AaveV3DebtPositionChangeSchema: GenMessage<AaveV3DebtPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 4);

/**
 * @generated from message enzyme.enzyme.v1.ArbitraryLoanPositionChange
 */
export type ArbitraryLoanPositionChange = Message<"enzyme.enzyme.v1.ArbitraryLoanPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 4;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: repeated string assets = 5;
   */
  assets: string[];

  /**
   * @generated from field: string arbitrary_loan_position_change_type = 6;
   */
  arbitraryLoanPositionChangeType: string;

  /**
   * @generated from field: string borrower = 7;
   */
  borrower: string;

  /**
   * @generated from field: string accounting_module = 8;
   */
  accountingModule: string;

  /**
   * @generated from field: string accounting_module_config_data = 9;
   */
  accountingModuleConfigData: string;

  /**
   * @generated from field: string description = 10;
   */
  description: string;

  /**
   * @generated from field: string external_position = 11;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 12;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ArbitraryLoanPositionChange.
 * Use `create(ArbitraryLoanPositionChangeSchema)` to create a new message.
 */
export const ArbitraryLoanPositionChangeSchema: GenMessage<ArbitraryLoanPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 5);

/**
 * @generated from message enzyme.enzyme.v1.CompoundDebtPositionChange
 */
export type CompoundDebtPositionChange = Message<"enzyme.enzyme.v1.CompoundDebtPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 4;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: string compoundDebtPositionChangeType = 5;
   */
  compoundDebtPositionChangeType: string;

  /**
   * @generated from field: string external_position = 6;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 7;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.CompoundDebtPositionChange.
 * Use `create(CompoundDebtPositionChangeSchema)` to create a new message.
 */
export const CompoundDebtPositionChangeSchema: GenMessage<CompoundDebtPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 6);

/**
 * @generated from message enzyme.enzyme.v1.ConvexVotingPositionChange
 */
export type ConvexVotingPositionChange = Message<"enzyme.enzyme.v1.ConvexVotingPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 4;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: repeated string assets = 5;
   */
  assets: string[];

  /**
   * @generated from field: string convex_voting_position_change_type = 6;
   */
  convexVotingPositionChangeType: string;

  /**
   * @generated from field: string external_position = 7;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 8;
   */
  vault: string;

  /**
   * @generated from field: string delegate = 9;
   */
  delegate: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ConvexVotingPositionChange.
 * Use `create(ConvexVotingPositionChangeSchema)` to create a new message.
 */
export const ConvexVotingPositionChangeSchema: GenMessage<ConvexVotingPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 7);

/**
 * @generated from message enzyme.enzyme.v1.ExternalPositionAddedEvent
 */
export type ExternalPositionAddedEvent = Message<"enzyme.enzyme.v1.ExternalPositionAddedEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string external_position = 4;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 5;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ExternalPositionAddedEvent.
 * Use `create(ExternalPositionAddedEventSchema)` to create a new message.
 */
export const ExternalPositionAddedEventSchema: GenMessage<ExternalPositionAddedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 8);

/**
 * @generated from message enzyme.enzyme.v1.ExternalPositionRemovedEvent
 */
export type ExternalPositionRemovedEvent = Message<"enzyme.enzyme.v1.ExternalPositionRemovedEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string external_position = 4;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 5;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ExternalPositionRemovedEvent.
 * Use `create(ExternalPositionRemovedEventSchema)` to create a new message.
 */
export const ExternalPositionRemovedEventSchema: GenMessage<ExternalPositionRemovedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 9);

/**
 * @generated from message enzyme.enzyme.v1.FeeSharesAllocationChangedEvent
 */
export type FeeSharesAllocationChangedEvent = Message<"enzyme.enzyme.v1.FeeSharesAllocationChangedEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string depositor = 5;
   */
  depositor: string;

  /**
   * @generated from field: string shares = 6;
   */
  shares: string;

  /**
   * @generated from field: string shares_change_type = 7;
   */
  sharesChangeType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityPerformanceFee fee = 8;
   */
  fee?: ActivityPerformanceFee;
};

/**
 * Describes the message enzyme.enzyme.v1.FeeSharesAllocationChangedEvent.
 * Use `create(FeeSharesAllocationChangedEventSchema)` to create a new message.
 */
export const FeeSharesAllocationChangedEventSchema: GenMessage<FeeSharesAllocationChangedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 10);

/**
 * @generated from message enzyme.enzyme.v1.FeeSharesBurnedEvent
 */
export type FeeSharesBurnedEvent = Message<"enzyme.enzyme.v1.FeeSharesBurnedEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string depositor = 5;
   */
  depositor: string;

  /**
   * @generated from field: string shares = 6;
   */
  shares: string;

  /**
   * @generated from field: string shares_change_type = 7;
   */
  sharesChangeType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityFee fee = 8;
   */
  fee?: ActivityFee;

  /**
   * @generated from field: string deposit = 9;
   */
  deposit: string;
};

/**
 * Describes the message enzyme.enzyme.v1.FeeSharesBurnedEvent.
 * Use `create(FeeSharesBurnedEventSchema)` to create a new message.
 */
export const FeeSharesBurnedEventSchema: GenMessage<FeeSharesBurnedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 11);

/**
 * @generated from message enzyme.enzyme.v1.FeeSharesPaidEvent
 */
export type FeeSharesPaidEvent = Message<"enzyme.enzyme.v1.FeeSharesPaidEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string depositor = 5;
   */
  depositor: string;

  /**
   * @generated from field: string shares = 6;
   */
  shares: string;

  /**
   * @generated from field: string shares_change_type = 7;
   */
  sharesChangeType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityFee fee = 8;
   */
  fee?: ActivityFee;

  /**
   * @generated from field: string deposit = 9;
   */
  deposit: string;
};

/**
 * Describes the message enzyme.enzyme.v1.FeeSharesPaidEvent.
 * Use `create(FeeSharesPaidEventSchema)` to create a new message.
 */
export const FeeSharesPaidEventSchema: GenMessage<FeeSharesPaidEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 12);

/**
 * @generated from message enzyme.enzyme.v1.FeeSharesReceivedEvent
 */
export type FeeSharesReceivedEvent = Message<"enzyme.enzyme.v1.FeeSharesReceivedEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string depositor = 5;
   */
  depositor: string;

  /**
   * @generated from field: string shares = 6;
   */
  shares: string;

  /**
   * @generated from field: string shares_change_type = 7;
   */
  sharesChangeType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityFee fee = 8;
   */
  fee?: ActivityFee;

  /**
   * @generated from field: string deposit = 9;
   */
  deposit: string;
};

/**
 * Describes the message enzyme.enzyme.v1.FeeSharesReceivedEvent.
 * Use `create(FeeSharesReceivedEventSchema)` to create a new message.
 */
export const FeeSharesReceivedEventSchema: GenMessage<FeeSharesReceivedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 13);

/**
 * @generated from message enzyme.enzyme.v1.FreelyTransferableSharesSetEvent
 */
export type FreelyTransferableSharesSetEvent = Message<"enzyme.enzyme.v1.FreelyTransferableSharesSetEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.FreelyTransferableSharesSetEvent.
 * Use `create(FreelyTransferableSharesSetEventSchema)` to create a new message.
 */
export const FreelyTransferableSharesSetEventSchema: GenMessage<FreelyTransferableSharesSetEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 14);

/**
 * @generated from message enzyme.enzyme.v1.GasRelayerDeposited
 */
export type GasRelayerDeposited = Message<"enzyme.enzyme.v1.GasRelayerDeposited"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount gas_relayer_asset_amount = 5;
   */
  gasRelayerAssetAmount?: AssetAmount;
};

/**
 * Describes the message enzyme.enzyme.v1.GasRelayerDeposited.
 * Use `create(GasRelayerDepositedSchema)` to create a new message.
 */
export const GasRelayerDepositedSchema: GenMessage<GasRelayerDeposited> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 15);

/**
 * @generated from message enzyme.enzyme.v1.GasRelayerWithdrawn
 */
export type GasRelayerWithdrawn = Message<"enzyme.enzyme.v1.GasRelayerWithdrawn"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount gas_relayer_asset_amount = 5;
   */
  gasRelayerAssetAmount?: AssetAmount;
};

/**
 * Describes the message enzyme.enzyme.v1.GasRelayerWithdrawn.
 * Use `create(GasRelayerWithdrawnSchema)` to create a new message.
 */
export const GasRelayerWithdrawnSchema: GenMessage<GasRelayerWithdrawn> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 16);

/**
 * @generated from message enzyme.enzyme.v1.KilnStakingPositionChange
 */
export type KilnStakingPositionChange = Message<"enzyme.enzyme.v1.KilnStakingPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount asset_amount = 6;
   */
  assetAmount?: AssetAmount;

  /**
   * @generated from field: string claim_type = 7;
   */
  claimType: string;

  /**
   * @generated from field: string kiln_staking_position_change_type = 8;
   */
  kilnStakingPositionChangeType: string;

  /**
   * @generated from field: string staking_contract_address = 9;
   */
  stakingContractAddress: string;
};

/**
 * Describes the message enzyme.enzyme.v1.KilnStakingPositionChange.
 * Use `create(KilnStakingPositionChangeSchema)` to create a new message.
 */
export const KilnStakingPositionChangeSchema: GenMessage<KilnStakingPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 17);

/**
 * @generated from message enzyme.enzyme.v1.LidoWithdrawalsPositionChange
 */
export type LidoWithdrawalsPositionChange = Message<"enzyme.enzyme.v1.LidoWithdrawalsPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: string lido_withdrawals_position_change_type = 6;
   */
  lidoWithdrawalsPositionChangeType: string;

  /**
   * @generated from field: repeated string amounts = 7;
   */
  amounts: string[];

  /**
   * @generated from field: repeated string request_ids = 8;
   */
  requestIds: string[];
};

/**
 * Describes the message enzyme.enzyme.v1.LidoWithdrawalsPositionChange.
 * Use `create(LidoWithdrawalsPositionChangeSchema)` to create a new message.
 */
export const LidoWithdrawalsPositionChangeSchema: GenMessage<LidoWithdrawalsPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 18);

/**
 * @generated from message enzyme.enzyme.v1.LiquityDebtPositionChange
 */
export type LiquityDebtPositionChange = Message<"enzyme.enzyme.v1.LiquityDebtPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: string liquity_debt_position_change_type = 6;
   */
  liquityDebtPositionChangeType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount incoming_asset_amounts = 7;
   */
  incomingAssetAmounts: AssetAmount[];

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount fee_asset_amount = 8;
   */
  feeAssetAmount?: AssetAmount;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount lusd_gas_compensation_asset_amount = 9;
   */
  lusdGasCompensationAssetAmount?: AssetAmount;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount outgoing_asset_amount = 10;
   */
  outgoingAssetAmount?: AssetAmount;
};

/**
 * Describes the message enzyme.enzyme.v1.LiquityDebtPositionChange.
 * Use `create(LiquityDebtPositionChangeSchema)` to create a new message.
 */
export const LiquityDebtPositionChangeSchema: GenMessage<LiquityDebtPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 19);

/**
 * @generated from message enzyme.enzyme.v1.ActivityMaplePool
 */
export type ActivityMaplePool = Message<"enzyme.enzyme.v1.ActivityMaplePool"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string liquidity_asset = 2;
   */
  liquidityAsset: string;

  /**
   * @generated from field: string rewards_contract = 3;
   */
  rewardsContract: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ActivityMaplePool.
 * Use `create(ActivityMaplePoolSchema)` to create a new message.
 */
export const ActivityMaplePoolSchema: GenMessage<ActivityMaplePool> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 20);

/**
 * @generated from message enzyme.enzyme.v1.MapleLiquidityPositionChange
 */
export type MapleLiquidityPositionChange = Message<"enzyme.enzyme.v1.MapleLiquidityPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount asset_amount = 6;
   */
  assetAmount?: AssetAmount;

  /**
   * @generated from field: string maple_asset = 7;
   */
  mapleAsset: string;

  /**
   * @generated from field: string maple_liquidity_position_change_type = 8;
   */
  mapleLiquidityPositionChangeType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityMaplePool poolV1 = 9;
   */
  poolV1?: ActivityMaplePool;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityMaplePool poolV2 = 10;
   */
  poolV2?: ActivityMaplePool;
};

/**
 * Describes the message enzyme.enzyme.v1.MapleLiquidityPositionChange.
 * Use `create(MapleLiquidityPositionChangeSchema)` to create a new message.
 */
export const MapleLiquidityPositionChangeSchema: GenMessage<MapleLiquidityPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 21);

/**
 * @generated from message enzyme.enzyme.v1.ActivityPolicy
 */
export type ActivityPolicy = Message<"enzyme.enzyme.v1.ActivityPolicy"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string policy = 2;
   */
  policy: string;

  /**
   * @generated from field: string policy_type = 3;
   */
  policyType: string;

  /**
   * @generated from field: bool enabled = 4;
   */
  enabled: boolean;
};

/**
 * Describes the message enzyme.enzyme.v1.ActivityPolicy.
 * Use `create(ActivityPolicySchema)` to create a new message.
 */
export const ActivityPolicySchema: GenMessage<ActivityPolicy> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 22);

/**
 * @generated from message enzyme.enzyme.v1.PolicyDisabledForVault
 */
export type PolicyDisabledForVault = Message<"enzyme.enzyme.v1.PolicyDisabledForVault"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityPolicy policy = 5;
   */
  policy?: ActivityPolicy;
};

/**
 * Describes the message enzyme.enzyme.v1.PolicyDisabledForVault.
 * Use `create(PolicyDisabledForVaultSchema)` to create a new message.
 */
export const PolicyDisabledForVaultSchema: GenMessage<PolicyDisabledForVault> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 23);

/**
 * @generated from message enzyme.enzyme.v1.PolicyEnabledForVault
 */
export type PolicyEnabledForVault = Message<"enzyme.enzyme.v1.PolicyEnabledForVault"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.ActivityPolicy policy = 5;
   */
  policy?: ActivityPolicy;
};

/**
 * Describes the message enzyme.enzyme.v1.PolicyEnabledForVault.
 * Use `create(PolicyEnabledForVaultSchema)` to create a new message.
 */
export const PolicyEnabledForVaultSchema: GenMessage<PolicyEnabledForVault> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 24);

/**
 * @generated from message enzyme.enzyme.v1.PricelessAssetBypass
 */
export type PricelessAssetBypass = Message<"enzyme.enzyme.v1.PricelessAssetBypass"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string asset = 5;
   */
  asset: string;
};

/**
 * Describes the message enzyme.enzyme.v1.PricelessAssetBypass.
 * Use `create(PricelessAssetBypassSchema)` to create a new message.
 */
export const PricelessAssetBypassSchema: GenMessage<PricelessAssetBypass> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 25);

/**
 * @generated from message enzyme.enzyme.v1.PricelessAssetTimelock
 */
export type PricelessAssetTimelock = Message<"enzyme.enzyme.v1.PricelessAssetTimelock"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string asset = 5;
   */
  asset: string;
};

/**
 * Describes the message enzyme.enzyme.v1.PricelessAssetTimelock.
 * Use `create(PricelessAssetTimelockSchema)` to create a new message.
 */
export const PricelessAssetTimelockSchema: GenMessage<PricelessAssetTimelock> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 26);

/**
 * @generated from message enzyme.enzyme.v1.ProtocolFeeBurned
 */
export type ProtocolFeeBurned = Message<"enzyme.enzyme.v1.ProtocolFeeBurned"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: string mln_burned = 3;
   */
  mlnBurned: string;

  /**
   * @generated from field: string shares = 4;
   */
  shares: string;

  /**
   * @generated from field: float timestamp = 5;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 6;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ProtocolFeeBurned.
 * Use `create(ProtocolFeeBurnedSchema)` to create a new message.
 */
export const ProtocolFeeBurnedSchema: GenMessage<ProtocolFeeBurned> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 27);

/**
 * @generated from message enzyme.enzyme.v1.ProtocolFeePaid
 */
export type ProtocolFeePaid = Message<"enzyme.enzyme.v1.ProtocolFeePaid"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: string shares = 3;
   */
  shares: string;

  /**
   * @generated from field: float timestamp = 4;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 5;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.ProtocolFeePaid.
 * Use `create(ProtocolFeePaidSchema)` to create a new message.
 */
export const ProtocolFeePaidSchema: GenMessage<ProtocolFeePaid> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 28);

/**
 * @generated from message enzyme.enzyme.v1.SharesBoughtEvent
 */
export type SharesBoughtEvent = Message<"enzyme.enzyme.v1.SharesBoughtEvent"> & {
  /**
   * @generated from field: string activity_type = 1;
   */
  activityType: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount deposit_asset_amount = 2;
   */
  depositAssetAmount?: AssetAmount;

  /**
   * @generated from field: string shares_issued = 3;
   */
  sharesIssued: string;
};

/**
 * Describes the message enzyme.enzyme.v1.SharesBoughtEvent.
 * Use `create(SharesBoughtEventSchema)` to create a new message.
 */
export const SharesBoughtEventSchema: GenMessage<SharesBoughtEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 29);

/**
 * @generated from message enzyme.enzyme.v1.SharesRedeemedEvent
 */
export type SharesRedeemedEvent = Message<"enzyme.enzyme.v1.SharesRedeemedEvent"> & {
  /**
   * @generated from field: string activity_type = 1;
   */
  activityType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount payout_asset_amounts = 2;
   */
  payoutAssetAmounts: AssetAmount[];
};

/**
 * Describes the message enzyme.enzyme.v1.SharesRedeemedEvent.
 * Use `create(SharesRedeemedEventSchema)` to create a new message.
 */
export const SharesRedeemedEventSchema: GenMessage<SharesRedeemedEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 30);

/**
 * @generated from message enzyme.enzyme.v1.SharesTransferEvent
 */
export type SharesTransferEvent = Message<"enzyme.enzyme.v1.SharesTransferEvent"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: string shares = 3;
   */
  shares: string;

  /**
   * @generated from field: float timestamp = 4;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 5;
   */
  vault: string;

  /**
   * @generated from field: string from = 6;
   */
  from: string;

  /**
   * @generated from field: string to = 7;
   */
  to: string;
};

/**
 * Describes the message enzyme.enzyme.v1.SharesTransferEvent.
 * Use `create(SharesTransferEventSchema)` to create a new message.
 */
export const SharesTransferEventSchema: GenMessage<SharesTransferEvent> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 31);

/**
 * @generated from message enzyme.enzyme.v1.StakeWiseStakingPositionChange
 */
export type StakeWiseStakingPositionChange = Message<"enzyme.enzyme.v1.StakeWiseStakingPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount stake_wise_staking_asset_amount = 6;
   */
  stakeWiseStakingAssetAmount?: AssetAmount;

  /**
   * @generated from field: string stake_wise_staking_position_change_type = 7;
   */
  stakeWiseStakingPositionChangeType: string;

  /**
   * @generated from field: string stake_wise_vault_token = 8;
   */
  stakeWiseVaultToken: string;
};

/**
 * Describes the message enzyme.enzyme.v1.StakeWiseStakingPositionChange.
 * Use `create(StakeWiseStakingPositionChangeSchema)` to create a new message.
 */
export const StakeWiseStakingPositionChangeSchema: GenMessage<StakeWiseStakingPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 32);

/**
 * @generated from message enzyme.enzyme.v1.PendleV2PositionChange
 */
export type PendleV2PositionChange = Message<"enzyme.enzyme.v1.PendleV2PositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 6;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: repeated string assets = 7;
   */
  assets: string[];

  /**
   * @generated from field: repeated string markets = 8;
   */
  markets: string[];

  /**
   * @generated from field: string pendle_v2_position_change_type = 9;
   */
  pendleV2PositionChangeType: string;
};

/**
 * Describes the message enzyme.enzyme.v1.PendleV2PositionChange.
 * Use `create(PendleV2PositionChangeSchema)` to create a new message.
 */
export const PendleV2PositionChangeSchema: GenMessage<PendleV2PositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 33);

/**
 * @generated from message enzyme.enzyme.v1.TheGraphDelegationPositionChange
 */
export type TheGraphDelegationPositionChange = Message<"enzyme.enzyme.v1.TheGraphDelegationPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: float timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount fee_amount = 6;
   */
  feeAmount?: AssetAmount;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount the_graph_delegation_asset_amount = 7;
   */
  theGraphDelegationAssetAmount?: AssetAmount;

  /**
   * @generated from field: enzyme.enzyme.v1.AssetAmount withdrew_while_undelegating_asset_amount = 8;
   */
  withdrewWhileUndelegatingAssetAmount?: AssetAmount;

  /**
   * @generated from field: string indexer = 9;
   */
  indexer: string;

  /**
   * @generated from field: string new_indexer = 10;
   */
  newIndexer: string;

  /**
   * @generated from field: string the_graph_delegation_position_change_type = 11;
   */
  theGraphDelegationPositionChangeType: string;
};

/**
 * Describes the message enzyme.enzyme.v1.TheGraphDelegationPositionChange.
 * Use `create(TheGraphDelegationPositionChangeSchema)` to create a new message.
 */
export const TheGraphDelegationPositionChangeSchema: GenMessage<TheGraphDelegationPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 34);

/**
 * @generated from message enzyme.enzyme.v1.Trade
 */
export type Trade = Message<"enzyme.enzyme.v1.Trade"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: float timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string adapter = 5;
   */
  adapter: string;

  /**
   * @generated from field: string trade_type = 6;
   */
  tradeType: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount incoming_asset_amounts = 7;
   */
  incomingAssetAmounts: AssetAmount[];

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount outgoing_asset_amounts = 8;
   */
  outgoingAssetAmounts: AssetAmount[];

  /**
   * @generated from field: repeated string incoming_assets = 9;
   */
  incomingAssets: string[];

  /**
   * @generated from field: repeated string outgoing_assets = 10;
   */
  outgoingAssets: string[];
};

/**
 * Describes the message enzyme.enzyme.v1.Trade.
 * Use `create(TradeSchema)` to create a new message.
 */
export const TradeSchema: GenMessage<Trade> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 35);

/**
 * @generated from message enzyme.enzyme.v1.UniswapV3Nft
 */
export type UniswapV3Nft = Message<"enzyme.enzyme.v1.UniswapV3Nft"> & {
  /**
   * @generated from field: float tick_lower = 1;
   */
  tickLower: number;

  /**
   * @generated from field: float tick_upper = 2;
   */
  tickUpper: number;

  /**
   * @generated from field: string fee = 3;
   */
  fee: string;

  /**
   * @generated from field: string pool_address = 4;
   */
  poolAddress: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: string tokenURI = 6;
   */
  tokenURI: string;

  /**
   * @generated from field: string liquidity = 7;
   */
  liquidity: string;

  /**
   * @generated from field: string token_0 = 8;
   */
  token0: string;

  /**
   * @generated from field: string token_1 = 9;
   */
  token1: string;
};

/**
 * Describes the message enzyme.enzyme.v1.UniswapV3Nft.
 * Use `create(UniswapV3NftSchema)` to create a new message.
 */
export const UniswapV3NftSchema: GenMessage<UniswapV3Nft> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 36);

/**
 * @generated from message enzyme.enzyme.v1.UniswapV3LiquidityPositionChange
 */
export type UniswapV3LiquidityPositionChange = Message<"enzyme.enzyme.v1.UniswapV3LiquidityPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string activity_type = 2;
   */
  activityType: string;

  /**
   * @generated from field: float timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string external_position = 5;
   */
  externalPosition: string;

  /**
   * @generated from field: repeated enzyme.enzyme.v1.AssetAmount asset_amounts = 6;
   */
  assetAmounts: AssetAmount[];

  /**
   * @generated from field: float current_tick = 7;
   */
  currentTick: number;

  /**
   * @generated from field: string uniswap_v3_liquidity_position_change_type = 8;
   */
  uniswapV3LiquidityPositionChangeType: string;

  /**
   * @generated from field: string liquidity = 9;
   */
  liquidity: string;

  /**
   * @generated from field: string sqrtPrice = 10;
   */
  sqrtPrice: string;

  /**
   * @generated from field: string poolLiquidity = 11;
   */
  poolLiquidity: string;

  /**
   * @generated from field: enzyme.enzyme.v1.UniswapV3Nft nft = 12;
   */
  nft?: UniswapV3Nft;
};

/**
 * Describes the message enzyme.enzyme.v1.UniswapV3LiquidityPositionChange.
 * Use `create(UniswapV3LiquidityPositionChangeSchema)` to create a new message.
 */
export const UniswapV3LiquidityPositionChangeSchema: GenMessage<UniswapV3LiquidityPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 37);

/**
 * @generated from message enzyme.enzyme.v1.UnknownExternalPositionChange
 */
export type UnknownExternalPositionChange = Message<"enzyme.enzyme.v1.UnknownExternalPositionChange"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string external_position = 4;
   */
  externalPosition: string;

  /**
   * @generated from field: string vault = 5;
   */
  vault: string;
};

/**
 * Describes the message enzyme.enzyme.v1.UnknownExternalPositionChange.
 * Use `create(UnknownExternalPositionChangeSchema)` to create a new message.
 */
export const UnknownExternalPositionChangeSchema: GenMessage<UnknownExternalPositionChange> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 38);

/**
 * @generated from message enzyme.enzyme.v1.VaultCreated
 */
export type VaultCreated = Message<"enzyme.enzyme.v1.VaultCreated"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string creator = 5;
   */
  creator: string;

  /**
   * @generated from field: string owner = 6;
   */
  owner: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultCreated.
 * Use `create(VaultCreatedSchema)` to create a new message.
 */
export const VaultCreatedSchema: GenMessage<VaultCreated> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 39);

/**
 * @generated from message enzyme.enzyme.v1.Migration
 */
export type Migration = Message<"enzyme.enzyme.v1.Migration"> & {
  /**
   * @generated from field: bool cancelled = 1;
   */
  cancelled: boolean;

  /**
   * @generated from field: float cancelled_timestamp = 2;
   */
  cancelledTimestamp: number;

  /**
   * @generated from field: bool executed = 3;
   */
  executed: boolean;

  /**
   * @generated from field: float executed_timestamp = 4;
   */
  executedTimestamp: number;

  /**
   * @generated from field: float executable_timestamp = 5;
   */
  executableTimestamp: number;

  /**
   * @generated from field: string next_release = 6;
   */
  nextRelease: string;

  /**
   * @generated from field: string prev_release = 7;
   */
  prevRelease: string;
};

/**
 * Describes the message enzyme.enzyme.v1.Migration.
 * Use `create(MigrationSchema)` to create a new message.
 */
export const MigrationSchema: GenMessage<Migration> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 40);

/**
 * @generated from message enzyme.enzyme.v1.VaultMigrationCancelled
 */
export type VaultMigrationCancelled = Message<"enzyme.enzyme.v1.VaultMigrationCancelled"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Migration migration = 5;
   */
  migration?: Migration;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultMigrationCancelled.
 * Use `create(VaultMigrationCancelledSchema)` to create a new message.
 */
export const VaultMigrationCancelledSchema: GenMessage<VaultMigrationCancelled> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 41);

/**
 * @generated from message enzyme.enzyme.v1.VaultMigrationExecuted
 */
export type VaultMigrationExecuted = Message<"enzyme.enzyme.v1.VaultMigrationExecuted"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Migration migration = 5;
   */
  migration?: Migration;

  /**
   * @generated from field: string next_comptroller = 6;
   */
  nextComptroller: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultMigrationExecuted.
 * Use `create(VaultMigrationExecutedSchema)` to create a new message.
 */
export const VaultMigrationExecutedSchema: GenMessage<VaultMigrationExecuted> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 42);

/**
 * @generated from message enzyme.enzyme.v1.VaultMigrationSignalled
 */
export type VaultMigrationSignalled = Message<"enzyme.enzyme.v1.VaultMigrationSignalled"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Migration migration = 5;
   */
  migration?: Migration;

  /**
   * @generated from field: string next_comptroller = 6;
   */
  nextComptroller: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultMigrationSignalled.
 * Use `create(VaultMigrationSignalledSchema)` to create a new message.
 */
export const VaultMigrationSignalledSchema: GenMessage<VaultMigrationSignalled> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 43);

/**
 * @generated from message enzyme.enzyme.v1.VaultNominatedOwnerRemoved
 */
export type VaultNominatedOwnerRemoved = Message<"enzyme.enzyme.v1.VaultNominatedOwnerRemoved"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string nominated_owner = 5;
   */
  nominatedOwner: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultNominatedOwnerRemoved.
 * Use `create(VaultNominatedOwnerRemovedSchema)` to create a new message.
 */
export const VaultNominatedOwnerRemovedSchema: GenMessage<VaultNominatedOwnerRemoved> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 44);

/**
 * @generated from message enzyme.enzyme.v1.VaultNominatedOwnerSet
 */
export type VaultNominatedOwnerSet = Message<"enzyme.enzyme.v1.VaultNominatedOwnerSet"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string nominated_owner = 5;
   */
  nominatedOwner: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultNominatedOwnerSet.
 * Use `create(VaultNominatedOwnerSetSchema)` to create a new message.
 */
export const VaultNominatedOwnerSetSchema: GenMessage<VaultNominatedOwnerSet> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 45);

/**
 * @generated from message enzyme.enzyme.v1.VaultOwnershipTransferred
 */
export type VaultOwnershipTransferred = Message<"enzyme.enzyme.v1.VaultOwnershipTransferred"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string next_owner = 5;
   */
  nextOwner: string;

  /**
   * @generated from field: string prev_owner = 6;
   */
  prevOwner: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultOwnershipTransferred.
 * Use `create(VaultOwnershipTransferredSchema)` to create a new message.
 */
export const VaultOwnershipTransferredSchema: GenMessage<VaultOwnershipTransferred> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 46);

/**
 * @generated from message enzyme.enzyme.v1.Reconfiguration
 */
export type Reconfiguration = Message<"enzyme.enzyme.v1.Reconfiguration"> & {
  /**
   * @generated from field: bool cancelled = 1;
   */
  cancelled: boolean;

  /**
   * @generated from field: float cancelled_timestamp = 2;
   */
  cancelledTimestamp: number;

  /**
   * @generated from field: bool executed = 3;
   */
  executed: boolean;

  /**
   * @generated from field: float executed_timestamp = 4;
   */
  executedTimestamp: number;

  /**
   * @generated from field: float executable_timestamp = 5;
   */
  executableTimestamp: number;

  /**
   * @generated from field: string release = 6;
   */
  release: string;
};

/**
 * Describes the message enzyme.enzyme.v1.Reconfiguration.
 * Use `create(ReconfigurationSchema)` to create a new message.
 */
export const ReconfigurationSchema: GenMessage<Reconfiguration> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 47);

/**
 * @generated from message enzyme.enzyme.v1.VaultReconfigurationCancelled
 */
export type VaultReconfigurationCancelled = Message<"enzyme.enzyme.v1.VaultReconfigurationCancelled"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Reconfiguration reconfiguration = 5;
   */
  reconfiguration?: Reconfiguration;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultReconfigurationCancelled.
 * Use `create(VaultReconfigurationCancelledSchema)` to create a new message.
 */
export const VaultReconfigurationCancelledSchema: GenMessage<VaultReconfigurationCancelled> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 48);

/**
 * @generated from message enzyme.enzyme.v1.VaultReconfigurationExecuted
 */
export type VaultReconfigurationExecuted = Message<"enzyme.enzyme.v1.VaultReconfigurationExecuted"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Reconfiguration reconfiguration = 5;
   */
  reconfiguration?: Reconfiguration;

  /**
   * @generated from field: string next_comptroller = 6;
   */
  nextComptroller: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultReconfigurationExecuted.
 * Use `create(VaultReconfigurationExecutedSchema)` to create a new message.
 */
export const VaultReconfigurationExecutedSchema: GenMessage<VaultReconfigurationExecuted> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 49);

/**
 * @generated from message enzyme.enzyme.v1.VaultReconfigurationSignalled
 */
export type VaultReconfigurationSignalled = Message<"enzyme.enzyme.v1.VaultReconfigurationSignalled"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: enzyme.enzyme.v1.Reconfiguration reconfiguration = 5;
   */
  reconfiguration?: Reconfiguration;

  /**
   * @generated from field: string next_comptroller = 6;
   */
  nextComptroller: string;
};

/**
 * Describes the message enzyme.enzyme.v1.VaultReconfigurationSignalled.
 * Use `create(VaultReconfigurationSignalledSchema)` to create a new message.
 */
export const VaultReconfigurationSignalledSchema: GenMessage<VaultReconfigurationSignalled> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 50);

/**
 * @generated from message enzyme.enzyme.v1.TrackedAssetAdded
 */
export type TrackedAssetAdded = Message<"enzyme.enzyme.v1.TrackedAssetAdded"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string asset = 5;
   */
  asset: string;
};

/**
 * Describes the message enzyme.enzyme.v1.TrackedAssetAdded.
 * Use `create(TrackedAssetAddedSchema)` to create a new message.
 */
export const TrackedAssetAddedSchema: GenMessage<TrackedAssetAdded> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 51);

/**
 * @generated from message enzyme.enzyme.v1.TrackedAssetRemoved
 */
export type TrackedAssetRemoved = Message<"enzyme.enzyme.v1.TrackedAssetRemoved"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: float timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: string activity_type = 3;
   */
  activityType: string;

  /**
   * @generated from field: string vault = 4;
   */
  vault: string;

  /**
   * @generated from field: string asset = 5;
   */
  asset: string;
};

/**
 * Describes the message enzyme.enzyme.v1.TrackedAssetRemoved.
 * Use `create(TrackedAssetRemovedSchema)` to create a new message.
 */
export const TrackedAssetRemovedSchema: GenMessage<TrackedAssetRemoved> = /*@__PURE__*/
  messageDesc(file_enzyme_enzyme_v1_vault_activities, 52);

