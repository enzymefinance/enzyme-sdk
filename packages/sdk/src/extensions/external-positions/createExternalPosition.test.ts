import { decodeCreateExternalPositionArgs, encodeCreateExternalPositionArgs } from "./createExternalPosition.js";
import { toHex } from "viem";
import { expect, test } from "vitest";

test("decode create external position should work correctly", () => {
  const decoded = decodeCreateExternalPositionArgs(
    "0x000000000000000000000000976ea74026e726554db657fa54763abd0c3a0aa900000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000004061393035396362623261623039656232313935383366346135396135643036323361646533343664393632626364346534366231316461303437633930343962",
  );

  expect(decoded).toMatchInlineSnapshot(`
    {
      "callOnExternalPositionCallArgs": "0x61393035396362623261623039656232313935383366346135396135643036323361646533343664393632626364346534366231316461303437633930343962",
      "initializationData": "0x0000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000004061393035396362623261623039656232313935383366346135396135643036323361646533343664393632626364346534366231316461303437633930343962",
      "typeId": 864525257947771085510183188952227776536258415273n,
    }
  `);
});

test("encode create external position should work correctly", () => {
  const params = {
    typeId: 4n,
    callOnExternalPositionCallArgs: toHex("a9059cbb2ab09eb219583423432423f4a59a5d0623ade346d962bcd4e46b11da047c9049b"),
    initializationData: toHex("a9059c2i409234bb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b"),
  };

  const encoded = encodeCreateExternalPositionArgs(params);

  expect(encoded).toMatchInlineSnapshot(
    '"0x0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e
  );
});

test("decode create external position should be equal to encoded", () => {
  const params = {
    typeId: 4n,
    callOnExternalPositionCallArgs: toHex("a9059cbb2ab09eb219583423432423f4a59a5d0623ade346d962bcd4e46b11da047c9049b"),
    initializationData: toHex("a9059c2i409234bb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b"),
  };

  const encoded = encodeCreateExternalPositionArgs(params);
  const decoded = decodeCreateExternalPositionArgs(encoded);

  expect(decoded).toEqual(params);
});
