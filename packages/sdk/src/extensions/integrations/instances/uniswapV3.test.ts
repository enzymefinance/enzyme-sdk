import { DAI, WETH } from "../../../../tests/constants.js";
import { toWei } from "../../../utils/conversion.js";
import { decodeUniswapV3TakeOrderArgs, encodeUniswapV3TakeOrderArgs } from "./uniswapV3.js";
import { expect, test } from "vitest";

test("decodeUniswapV3TakeOrderArgs should be equal to encoded data with encodeUniswapV3TakeOrderArgs", () => {
  const params = {
    pathAddresses: [WETH, DAI],
    pathFees: [23, 15],
    outgoingAssetAmount: toWei(100),
    minIncomingAssetAmount: toWei(50),
  } as const;

  const encoded = encodeUniswapV3TakeOrderArgs({
    ...params,
    pathAddresses: [...params.pathAddresses],
    pathFees: [...params.pathFees],
  });
  const decoded = decodeUniswapV3TakeOrderArgs(encoded);

  expect(decoded).toEqual(params);
});

test("encodeUniswapV3TakeOrderArgs should encode correctly", () => {
  expect(
    encodeUniswapV3TakeOrderArgs({
      pathAddresses: [WETH, DAI],
      pathFees: [23, 15],
      outgoingAssetAmount: toWei(100),
      minIncomingAssetAmount: toWei(50),
    }),
  ).toMatchInlineSnapshot(
    '"0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000056bc75e2d63100000000000000000000000000000000000000000000000000002b5e3af16b18800000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000017000000000000000000000000000000000000000000000000000000000000000f"',
  );
});

test("decodeUniswapV3TakeOrderArgs should decode correctly", () => {
  expect(
    decodeUniswapV3TakeOrderArgs(
      "0x000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000056bc75e2d63100000000000000000000000000000000000000000000000000002b5e3af16b18800000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000006b175474e89094c44da98b954eedeac495271d0f00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000017000000000000000000000000000000000000000000000000000000000000000f",
    ),
  ).toEqual({
    pathAddresses: [WETH, DAI],
    pathFees: [23, 15],
    outgoingAssetAmount: toWei(100),
    minIncomingAssetAmount: toWei(50),
  });
});
