name: Snapshot
on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  snapshot:
    name: Snapshot
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, '/snapshot ') }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Extract snapshot comment
        id: comment
        run: |
          snapshot=$(echo "${{ github.event.comment.body }}" | grep -oP '^/snapshot\s([a-z-]{4,16})\s*$' | cut -d' ' -f2)
          if [[ -n $snapshot ]]; then
            echo "snapshot=$snapshot" >> $GITHUB_OUTPUT
          else
            echo ::error::Invalid snapshot comment
          fi

      - name: Enforce permission requirement
        uses: prince-chrismc/check-actor-permissions-action@v3
        with:
          permission: write

      - name: Checkout default branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout pull request branch
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      - name: Get current branch name
        id: branch  
        run: echo "branch=$(git branch --show-current)" >> $GITHUB_OUTPUT

      - name: Retrieve changeset entries
        if: ${{ steps.branch.outputs.branch == 'changeset-release/main' }}
        run: git checkout origin/main -- .changeset

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

      - name: Exit pre-release mode
        if: ${{ hashFiles('.changeset/pre.json') != '' }}
        run: pnpm changeset pre exit

      - name: Check changeset status
        run: |
          pnpm changeset status --since origin/main --output changeset.json
          if [[ $(jq '.releases | length' changeset.json) -eq 0 ]]; then
            echo ::error::No changeset entries found
          fi

      - name: Version snapshot
        run: pnpm changeset version --snapshot ${{ steps.comment.outputs.snapshot }}

      - name: Build snapshot
        run: pnpm build
 
      - name: Set registry config
        run: pnpn config set --location project "//registry.npmjs.org/:_authToken" "${{ secrets.NPM_TOKEN }}"

      - name: Publish snapshot
        id: snapshot
        run: |
          tags=($(pnpm changeset publish --no-git-tag | grep -oP 'New tag:\s+([^\s\n]+)' | cut -d' ' -f3))
          echo "tags=$(printf '%s\n' "${tags[@]}" | jq -R -s .)" >> $GITHUB_OUTPUT
